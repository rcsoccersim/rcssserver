#! /bin/sh

prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@
LIBPATH=${libdir}
if [ x"$LIBPATH" != x ] ; then
    if [ x"$LD_LIBRARY_PATH" = x ] ; then
        LD_LIBRARY_PATH=$LIBPATH
    else
        LD_LIBRARY_PATH=$LIBPATH:$LD_LIBRARY_PATH
    fi
    export LD_LIBRARY_PATH
fi

#--------------------------------------------------
# option
#

SERV=`which rcssserver 2> /dev/null`
if test $? -eq 1; then
    echo "Error: rcssserver can not be found in your PATH"
    echo ""
    exit 1
fi

if test $# -eq 0; then
    if test "$RCSSMONITOR"; then
        MON=`which "$RCSSMONITOR" 2> /dev/null`
        if test $? -eq 1; then
            echo "Error: cannot find the monitor specified by RCSSMONITOR: $RCSSMONITOR"
            echo ""
            exit 1
        fi
    else
        MON=`which rcssmonitor 2> /dev/null`
        if test $? -eq 1; then
            echo "Error: No monitors can be found in your PATH and the"
            echo "       RCSSMONITOR environment variable is not set. Please"
            echo "       add rcssmonitor or rcssmonitor_classic to you PATH,"
            echo "       or set the RCSSMONITOR environment variable to the"
            echo "       executable you wish to use."
            echo ""
            exit 1
        fi
    fi
else
    while [ $# -gt 0 ]
    do
        case $1 in
            -rcssmonitor)
            MON=`which rcssmonitor 2> /dev/null`
            if test $? -eq 1; then
                echo "Error: rcssmonitor cannot be found in your PATH"
                echo ""
                exit 1
            fi
            ;;

            *)
            echo "Error: unsupported option"
            echo "Usage: $0 [(-frameview)|(-classic)]"
            echo ""
            ;;
        esac

        shift 1
    done
fi

#--------------------------------------------------
# set handler
#

trap kill_server INT

#--------------------------------------------------
# start server
#

$SERV &
PID=$!

#--------------------------------------------------
# kill server
#
kill_server()
{
    kill -s INT $PID
    echo ""
    exit 0
}

#--------------------------------------------------
# start monitor
#

sleep 1

$MON

kill_server
